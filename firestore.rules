rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /{document=**} {
      allow read, write: if isAdmin();
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if true;
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    match /positions/{positionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /trades/{tradeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /support_messages/{messageId} {
      allow read, write: if isAuthenticated();
    }

    match /verification_documents/{docId} {
      allow read, write: if isAuthenticated();
    }

    match /market_data/{dataId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}